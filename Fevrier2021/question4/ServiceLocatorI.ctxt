#BlueJ class context
comment0.target=ServiceLocatorI
comment1.params=nomDuMediateur
comment1.target=question1.MediateurI\ rechercher(java.lang.String)
comment1.text=\ Recherche\ d'un\ mediateur,\ \u00E0\ l'aide\ de\ son\ nom.\r\n\ @param\ nomDuMediateur\ le\ nom\ du\ mediateur\r\n\ @return\ le\ m\u00E9diateur\ avec\ ce\ nom\r\n
comment2.params=mediateur
comment2.target=void\ ajouterMediateur(question1.MediateurI)
comment2.text=\ Ajout\ d'un\ m\u00E9diateur,\r\n\ <b>Attention</b>\ pas\ de\ tests\ sur\ la\ pr\u00E9sence\ \u00E9ventuelle\ de\ doublons\r\n\ @exception\ si\ l'ajout\ \u00E9choue\ \r\n
comment3.params=mediateur
comment3.target=void\ setMediateur(question1.MediateurI)
comment3.text=\ Ajout\ d'un\ m\u00E9diateur,\ 'setMediateur'\:\ synonyme\ de\ 'ajouterMediateur'\r\n\ pour\ femtoContainer\ et\ l'appel\ implicite\ des\ mutateurs\ setXXX\r\n\ <b>Attention</b>\ pas\ de\ tests\ sur\ la\ pr\u00E9sence\ \u00E9ventuelle\ de\ doublons\r\n\ @exception\ si\ l'ajout\ \u00E9choue\ \r\n
comment4.params=
comment4.target=java.util.Iterator\ iterator()
comment4.text=\ Retourne\ un\ it\u00E9rateur\ sur\ tous\ les\ mediateurs\ accessibles.\r\n\ \ i.e.\ tous\ les\ m\u00E9diateurs\ ajout\u00E9s\ par\ les\ appels\ de\ {add,set}Mediateur\r\n
comment5.params=
comment5.target=boolean\ repOk()
comment5.text=\ Invariant\ de\ classe.\r\n\ @return\ vrai\ si\ l'invariant\ est\ satisfait\r\n
comment6.params=
comment6.target=java.lang.Object\ af()
comment6.text=\ Fonction\ d'abstraction.\ optionnelle,\ optionnelle\r\n\ @return\ une\ repr\u00E9sentation\ dite\ abstraite\r\n
numComments=7
